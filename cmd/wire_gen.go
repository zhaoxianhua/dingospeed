// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"dingospeed/internal/dao"
	"dingospeed/internal/data"
	"dingospeed/internal/handler"
	"dingospeed/internal/router"
	"dingospeed/internal/server"
	"dingospeed/internal/service"
	"dingospeed/pkg/app"
	"dingospeed/pkg/config"
)

import (
	_ "net/http/pprof"
)

// Injectors from wire.go:

func wireApp(configConfig *config.Config) (*app.App, func(), error) {
	echo := server.NewEngine()
	schedulerDao := dao.NewSchedulerDao()
	downloaderDao := dao.NewDownloaderDao(schedulerDao)
	baseData := data.NewBaseData()
	fileDao := dao.NewFileDao(downloaderDao, baseData)
	fileService := service.NewFileService(fileDao)
	sysService := service.NewSysService()
	fileHandler := handler.NewFileHandler(fileService, sysService)
	metaDao := dao.NewMetaDao(fileDao)
	metaService := service.NewMetaService(fileDao, metaDao)
	metaHandler := handler.NewMetaHandler(metaService)
	sysHandler := handler.NewSysHandler(sysService)
	httpRouter := router.NewHttpRouter(echo, fileHandler, metaHandler, sysHandler)
	httpServer := server.NewServer(configConfig, echo, httpRouter)
	schedulerService := service.NewSchedulerService(schedulerDao)
	schedulerServer := server.NewSchedulerServer(schedulerService)
	appApp := newApp(httpServer, schedulerServer)
	return appApp, func() {
	}, nil
}
